@using VersioningAppBlazorServer.Components.Layout

@rendermode RenderMode.InteractiveServer

@inject NavigationManager Navigation
@* <CascadingAuthenticationState> *@
<RadzenLayout>
    <RadzenHeader>
        <RadzenRow AlignItems="AlignItems.Center">
            <RadzenColumn Size="4" class="rz-color-on-info-lighter rz-pl-1">
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="0">
                    <RadzenSidebarToggle Click="@(() => sidebar1Expanded = !sidebar1Expanded)" />

                </RadzenStack>
            </RadzenColumn>
            @if (Head != null)
            {
                <RadzenColumn>
                    @Head
                </RadzenColumn>
            }
            <RadzenColumn>
                <RadzenStack AlignItems="AlignItems.End">
@*                     <AuthorizeView>
                        <Authorized>
                            <RadzenMenu class="rz-mt-0 rz-mr-0 rz-pr-0 rz-pt-0">
                                <RadzenMenuItem Text="@context.User.Identity?.Name" Icon="account_circle">
                                    <RadzenMenuItem Text="Wyloguj się" Click="BeginSignOut" Icon="input"></RadzenMenuItem>
                                </RadzenMenuItem>
                            </RadzenMenu>
                        </Authorized>
                        <NotAuthorized>
                            <a href="authentication/login">Log in</a>
                        </NotAuthorized>
                    </AuthorizeView> *@
                </RadzenStack>
            </RadzenColumn>
        </RadzenRow>
    </RadzenHeader>
    <RadzenSidebar @bind-Expanded="@sidebar1Expanded">
        <NavMenu />
    </RadzenSidebar>

    <RadzenBody>
        @if (Body != null)
        {
            @Body
        }
        else
        {
            <p>brak zawartości</p>
        }
    </RadzenBody>
    <RadzenFooter>
        @if (Footer != null)
        {
            @Footer
        }
    </RadzenFooter>
</RadzenLayout>
@* </CascadingAuthenticationState> *@
@code {
    [Parameter]
    public RenderFragment? Body { get; set; } = null;
    [Parameter]
    public RenderFragment? Head { get; set; } = null;
    [Parameter]
    public RenderFragment? Footer { get; set; } = null;

    bool sidebar1Expanded = true;

    private void BeginSignOut()
    {
        Navigation.NavigateTo("authentication/logout");
    }
}
